version: '3.8'

services:
  mssql:
    platform: linux/amd64 
    build:
      context: ./mssql
      dockerfile: Dockerfile
    container_name: mssql_server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=nhomnaymanhNhat1!
      - MSSQL_PID=Developer
    ports:
      - "1435:1433"
    volumes:
      - sql_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P 'nhomnaymanhNhat1!' -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  extract-track-feature:
    build:
      context: ./extract-track-feature
    container_name: extract-track-feature
    ports:
      - "5001:5000"
    volumes:
      - ./extract-track-feature:/app
    restart: unless-stopped

  backend:
    platform: linux/amd64 
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_HOST: mssql
      DB_PORT: 1433
      DB_USERNAME: sa
      DB_PASSWORD: nhomnaymanhNhat1!
      DB_NAME: DB_Graptify
      DIALECT: mssql
      DB_ENCRYPT: false
      NODE_ENV: development
      PORT: 8080
    depends_on:
      mssql:
        condition: service_healthy
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    restart: always

volumes:
  sql_data:
    driver: local
  esdata:
    driver: local
