version: '3.8'

services:
  mssql:
    build:
        context: ./mssql
        dockerfile: Dockerfile
    container_name: mssql_server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=nhomnaymanhNhat1!
      - MSSQL_PID=Developer
    ports:
      - "1435:1433"
    volumes:
      - sql_data:/var/opt/mssql
      
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P 'nhomnaymanhNhat1!' -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s 
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  extract-track-feature:
    build:
      context: ./extract-track-feature
    container_name: extract-track-feature
    ports:
      - "5000:5000"
    volumes:
      - ./extract-track-feature:/app
    restart: unless-stopped
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./backend/src/public/assets/track_audio:/grabtify/backend/src/public/assets/track_audio
    environment:
      - DB_HOST=host.docker.internal
    depends_on:
      mssql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    ports:
      - 8080:8080

  nginx:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5173:80
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  sql_data:
  esdata:


